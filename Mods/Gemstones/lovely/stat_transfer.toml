[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# Add permanent boosts
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = 'perma_bonus = self.ability and self.ability.perma_bonus or 0,'
position = "after"
payload = '''
perma_x_chips = self.ability and self.ability.perma_x_chips or 0,
perma_x_mult = self.ability and self.ability.perma_x_mult or 0,
perma_h_x_mult = self.ability and self.ability.perma_h_x_mult or 0,
perma_p_dollars = self.ability and self.ability.perma_p_dollars or 0,
'''
match_indent = true

# Fix x_mult
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "return self.ability.x_mult"
position = "at"
payload = "return self.ability.x_mult + (self.ability.perma_x_mult or 0)"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.x_mult <= 1 then return 0 end"
position = "at"
payload = "if (self.ability.x_mult + (self.ability.perma_x_mult or 0)) <= 1 then return 0 end"
match_indent = true

# Fix h_x_mult
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "return self.ability.h_x_mult"
position = "at"
payload = "return self.ability.h_x_mult + (self.ability.perma_h_x_mult or 0)"
match_indent = true

# Fix p_dollars
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.p_dollars > 0 then"
position = "before"
payload = '''
if (self.ability.perma_p_dollars or 0) > 0 then
    ret = ret + self.ability.perma_p_dollars
end
'''
match_indent = true