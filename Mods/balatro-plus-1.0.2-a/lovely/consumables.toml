[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Blank Sigil ease round played
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.FUNCS.draw_from_hand_to_discard()"
position = "before"
match_indent = true
payload = """
for _, c in ipairs(G.consumeables.cards) do
  if c.ability.name == "c_bplus_sigil_blank" then
    c.ability.extra = math.max(c.ability.extra - 1, 1)
  end
end

"""

# Froze Sigil negative process
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.round_resets.temp_reroll_cost then G.GAME.round_resets.temp_reroll_cost = nil; calculate_reroll_cost(true) end"
position = "after"
match_indent = true
payload = """

for _, joker in ipairs(G.jokers.cards) do
  local remaining = joker.ability.bplus_debuffed_by_sigil_froze
  if remaining then
    if remaining <= 1 then
      joker.ability.bplus_debuffed_by_sigil_froze = nil
      joker:set_debuff(false)
      joker:set_edition({ negative = true }, true)
    else
      joker.ability.bplus_debuffed_by_sigil_froze = remaining - 1
    end
  end
end
"""

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "function Card:set_debuff(should_debuff)"
position = "after"
match_indent = true
payload = """
if self.ability.bplus_debuffed_by_sigil_froze and self.ability.bplus_debuffed_by_sigil_froze > 0 then
  should_debuff = true
end
"""

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.sticker or ((self.sticker_run and self.sticker_run~='NONE') and G.SETTINGS.run_stake_stickers)  then loc_vars = loc_vars or {}; loc_vars.sticker=(self.sticker or self.sticker_run) end"
position = "after"
match_indent = true
payload = """
if self.ability.bplus_debuffed_by_sigil_froze and self.ability.bplus_debuffed_by_sigil_froze then
  local remaining = self.ability.bplus_debuffed_by_sigil_froze
  main_end = main_end or {}
  main_end[#main_end + 1] = {n=G.UIT.C, config={align = "bm", minh = 0.4, padding = 0.06}, nodes={
    {n=G.UIT.R, config={align = "tm", padding = 0.01}, nodes = {
      {n=G.UIT.T, config={text = "Frozen:",colour = darken(G.C.BLUE, 0.3), scale = 0.32}},
    }},
    {n=G.UIT.R, config={align = "tm", padding = 0.01}, nodes = {
      {n=G.UIT.T, config={text = remaining .. " rounds remaining",colour = G.C.BLUE, scale = 0.32}},
    }},
  }}
end
"""
